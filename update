#!/bin/bash

# Defaults
defaultName="lightning"
defaultCLIBuildName="$defaultName-node"
defaultCLIAlias="lgtn"
defaultAlphaTestnetBranch="testnet-alpha-0"
defaultLightningPath="$HOME/fleek-network/$defaultName"
defaultDiscordUrl="https://discord.gg/fleekxyz"
defaultLightningDiagnosticFilename="diagnostic.log"
defaultLightningOutputFilename="output.log"
defaultLightningLogPath="/var/log/$defaultName"
defaultLightningDiagnosticLogAbsPath="$defaultLightningLogPath/$defaultLightningDiagnosticFilename"
defaultLightningOutputLogAbsPath="$defaultLightningLogPath/$defaultLightningOutputFilename"
defaultTargetName="release"
defaultLightningSystemdServiceName="$defaultName"
defaultLightningSystemdServicePath="/etc/systemd/system/$defaultLightningSystemdServiceName.service"
defaultLightningBasePath="$HOME/.$defaultName"
defaultTempLogFilePath="/tmp/$defaultName.log"
defaultTempLogFilePermisson=1777

(
  exec < /dev/tty;

  while read -rp "ü§ñ Are you logged with the user account used to install the Fleek Network Lightning CLI? (yes/no) " answer; do
    if [[ "$answer" == [nN] || "$answer" == [nN][oO] ]]; then
      printf "üëπ Oops! You should be logged in with the user account used to install the fleek Network Lightning CLI, switch the account and try again!\n"

      exit 1
    elif [[ "$answer" == [yY] || "$answer" == [yY][eE][sS] ]]; then
      break;
    fi

    printf "üí© Uh-oh! We expect a yes or no answer. Try again...\n"
  done

  if ! source "$HOME/.cargo/env"; then
    printf "üí© Uh-oh! Are you sure you're logged in with the user account used to install the Lightning CLI?\n"

    exit 1
  fi

  if ! command -v "cargo" &> /dev/null; then
    echo "üëπ Oops! The rust toolchain was not found, check the reference documentation to update the Lightning CLI manually https://docs.fleek.network/references/Lightning%20CLI/update-cli-from-source-code"
    echo

    exit 1
  fi

  if [[ ! -d "$defaultLightningPath" ]]; then
    defaultLightningPath="$(find . -type f -wholename "*core/node/Cargo.toml" -exec dirname "{}" \; |sort -zu |sed -z 's/$/\n/')"

    if [[ ! -d "$defaultLightningPath" ]]; then
      while read -rp "‚ö†Ô∏è  Oh-no! Failed to locate the Fleek Network Lightning repository source code. What is the local repository source code path? " answer; do
        if [[ -f "$answer/core/application/Cargo.toml" ]]; then
          break;
        else
          printf "üí© Uh-oh! That doesn't seem to be correct. Try again...\n"
        fi
      done
    fi

    echo "ü§ñ The Fleek Network Lightning source code was found at $defaultLightningPath"
    echo
  fi

  if ! cd "$defaultLightningPath"; then
    printf "üëπ Oops! Failed to change directory to %s\n" "$defaultLightningPath"

    exit 1
  fi

  if ! git rev-parse --abbrev-ref HEAD | grep -q "$defaultAlphaTestnetBranch"; then
    if ! git checkout "$defaultAlphaTestnetBranch"; then
      echo "Failed to checkout to branch $defaultAlphaTestnetBranch"
    fi
  fi

  echo

  while read -rp "ü§ñ The script will clear any changes made in the local source code repository by resetting it to be in sync with the remote origin, you'll lose any changes made in the repository. It's only related to the binary source code, not the ~/.lightning system config that holds your private keys and identity. Should the installer proceed and reset? (yes/no) " answer; do
    if [[ "$answer" == [nN] || "$answer" == [nN][oO] ]]; then
      echo "ü¶ñ The update script terminated. It has to reset the local repository to be in synch with remote. Read the documentation reference if you'd like to learn how to do it manually if thats your preference."

      exit 1
    elif [[ "$answer" == [yY] || "$answer" == [yY][eE][sS] ]]; then
      git fetch origin "$defaultAlphaTestnetBranch"
      git reset --hard "origin/$defaultAlphaTestnetBranch"
      git clean -f

      break;
    fi

    printf "üí© Uh-oh! We expect a yes or no answer. Try again...\n"
  done

  printf "ü§ñ Git pulling from the %s source code repository located at %s\n" "$defaultName" "$defaultLightningPath"
  if ! git pull origin "$defaultAlphaTestnetBranch"; then
    echo "üëπ Oops! Failed to git pull, if you made changes in the repository, e.g. edit files or added files in $defaultLightningPath, make sure you stage or reset them to let the automated process to work for you. Otherwise, check the document to do learn how to update manually https://docs.fleek.network/references/Lightning%20CLI/update-cli-from-source-code"

    exit 1
  fi

  printf "ü§ñ Build and install the %s CLI\n" "$defaultName"
  if ! cargo +stable build --release; then
    printf "üëπ Oops! Failed to build and install the %s CLI. If you are experiencing issues, help us improve by letting us know in our Discord %s\n" "$defaultName" "$defaultDiscordUrl"

    exit 1
  fi

  if [[ -L "/usr/local/bin/$defaultCLIAlias" ]]; then
    if ! sudo rm -f "/usr/local/bin/$defaultCLIAlias"; then
      printf "üëπ Oops! Failed to remove simbolic link %s \n" "/usr/local/bin/$defaultCLIAlias"
    fi
  fi

  if ! sudo ln -s "$defaultLightningPath/target/$defaultTargetName/$defaultCLIBuildName" /usr/local/bin/$defaultCLIAlias; then
    printf "üëπ Oops! Failed to symlink %s to /usr/local/bin/$defaultCLIAlias\n" "$defaultLightningPath/target/$defaultTargetName/$defaultCLIBuildName"
    echo
    read -rp "üòÖ After the installation, if $defaultName $defaultCLIBuildName CLI command is unavailable globally, then you need to add $defaultLightningPath/target/$defaultTargetName/$defaultCLIBuildName to your system PATH or symlink the binary to /usr/local/bin/$defaultCLIAlias, as we've failed to do it. Press ENTER to continue..."
  fi

  echo "ü§ñ Update the systemd $defaultName.service"
  if ! sudo sed -i "s/^ExecStart=.*/ExecStart=$defaultCLIAlias run/g" "$defaultLightningSystemdServicePath"; then
    echo "üëπ Oops! Failed to find and replace the property name ExecStart in $defaultLightningSystemdServicePath. You're advised to check our reference document to help troubleshoot https://docs.fleek.network/references/Lightning%20CLI/error-linking-with-cc-failed-exist-status-1/"

    exit 1
  else
    echo "‚úÖ Updated the systemd $defaultName.service unit file"
    echo "ü§ñ Should reload the systemctl daemon..."

    if ! sudo systemctl daemon-reload; then
      printf "üëπ Oops! Failed to reload the systemctl daemon for some reason\n"
    fi
  fi

  if ! rm -rf "$defaultLightningBasePath/data"; then
    echo "üëπ Oops! Failed to clear the path $defaultLightningBasePath/data for some reason. Check the documentation in https://docs.fleek.network/references/Lightning%20CLI/update-cli-from-source-code"
  fi

  echo "ü§ñ The /tmp directory should have default permissions"
  if ! sudo chmod "$defaultTempLogFilePermisson" /tmp; then
    echo "üí© Uh-oh! Failed to update permissions of /tmp"
  else
    echo "‚úÖ Updated /tmp permissions to $defaultTempLogFilePermisson"

    echo "ü§ñ The $defaultTempLogFilePath should exist"
    if ! sudo touch "$defaultTempLogFilePath"; then
      echo "üí© Uh-oh! Failed to create of $defaultTempLogFilePath"
    else
      echo "‚úÖ Created $defaultTempLogFilePath file"

      echo "ü§ñ The $defaultTempLogFilePath should have the permissions set to $defaultTempLogFilePermisson"
      if ! sudo chmod "$defaultTempLogFilePermisson" "$defaultTempLogFilePath"; then
        echo "üí© Uh-oh! Failed to change permissions of $defaultTempLogFilePath"
      else
        echo "‚úÖ Update permissions of $defaultTempLogFilePath file"
      fi
    fi
  fi

  echo "üåà The update has now completed."
  echo
  echo "ü§ñ Restart the Network Node by running the restart command:"
  echo "sudo systemctl restart $defaultName"
  echo
  echo "üëÄ You can watch the Node output by running the command:"
  echo "tail -f $defaultLightningOutputLogAbsPath"
  echo
  echo "ü•º For diagnostics run the command:"
  echo "tail -f $defaultLightningDiagnosticLogAbsPath"
  echo
  echo "Learn more by checking our guides at https://docs.fleek.network"
  echo "‚ú® That's all!"
)